'''Бабкагеддон
Ховард и Винс убегают от демона злой бабушки, которого они случайно призвали. Ритуал произошел на нулевых линейных координатах, и перед тем как бабушка погналась за ними, Ховард отбежал на координату nn, а Винс на координату mm, после чего они продолжили убегать от нулевой координаты с одинаковой скоростью, а бабушка начала свое движение в два раза быстрее них.



Напишите программу, которая находит минимальное расстояние, которое нужно пробежать бабушке, чтобы настигнуть Ховарда и Винса.

Формат входных данных
На вход программе подается два целых ненулевых числа nn и mm, разделенные символом пробела, — координаты Ховарда и Винса, на которые они успели отбежать перед тем, как бабушка начала свое движение.

Формат выходных данных
Программа должна вывести одно число — наименьшее расстояние, которое должна пробежать бабушка, чтобы настигнуть их.

Примечание 1. Рассмотрим первый тест. Сначала бабушка добежит до Ховарда, поскольку бабушка бегает в два раза быстрее него, то она с нулевой координаты добежит до координаты 22 ровно в тот момент, как Ховард перебежит с координаты 11 на координату 22, и пока это происходило, Винс также успел отбежать на одну позицию вперед, значит, теперь между бабушкой и Винсом расстояние 22, а значит Винс доберется с координаты 44 до координаты 66 за то же время, что и бабушка добежит с координаты 22 до координаты 66.

Примечание 2. Рассмотрим второй тест. Поскольку Ховард и Винс находятся на одинаковом расстоянии от бабушки, нет разницы за кем первым погнаться. Допустим, бабушка будет бежать за Ховардом. Он стоит на координате -1−1, а значит, исходя из предыдущего примера, она поймает его на координате -2−2, следовательно, она уже пробежала расстояние 22 и пока она бежала за ним, Винс успел отбежать на координату 22, и бабушка настигнет его на координате 66, поскольку Винсу нужно пробежать 44 до этой координаты, а бабушке 88, следовательно, в итоге бабушка пробежит расстояние 8 + 2 = 108+2=10.'''

n, m = map(int, input().split())
if n*m>0:
    print(max(abs(n), abs(m))*2)
if n*m<0:
    s_max, s_min = max(abs(n), abs(m)), min(abs(n), abs(m))
    print(8*s_min+2*s_max)



