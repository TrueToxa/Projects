'''Огородный покер
Напишите программу, которая будет находить наилучшую покерную комбинацию в данной руке из 55 карт. Валеты, дамы, короли и тузы будут даны как числа 1111, 1212, 1313 и 11 соответственно.

В любой карточной игре есть место шулерству, поэтому следует проверить руку на возможность ее существования. В руке из пяти карт не может быть более 44 одинаковых карт, если такое произошло – следует вывести слово Шулер.

Комбинации по убыванию старшинства:

44 одинаковые карты – вывести Каре;
33 одинаковые карты и 22 другие одинаковые карты – вывести Фулл Хаус;
55 последовательно идущих карт – Стрит;
33 одинаковые карты – Сет;
22 одинаковые карты и 2 другие одинаковые карты – Две пары;
22 одинаковые карты – Пара;
ничего из вышеперечисленного – Старшая карта.
Формат входных данных
На вход программе подается 55 чисел от 11 до 1313 через пробел – номера карт в руке.

Формат выходных данных
Вывести наилучшую возможную покерную комбинацию.

Примечание 1. Старший стрит (десятка, валет, дама, король, туз) не является стритом для упрощения задачи.

Примечание 2. Посмотреть все тесты к задаче можно по ссылке.'''

cards = sorted(map(int, input().split()))
if cards.count(cards[0])==5:
    print('Шулер')
elif cards == list(range(cards[0], cards[0]+5)):
    print('Стрит')
elif cards.count(cards[0])==4 or cards.count(cards[1])==4:
    print('Каре')
elif len(cards)-len(set(cards))==1:
    print('Пара')
else:     
    para1 = []
    para2 = []
    troika = False
    for i in range(4):
        if cards.count(cards[i])==3:
            troika = True
        if cards.count(cards[i])==2:
            para2 = para1
            para1.append(cards[i])
    if troika:
        if len(para1)!=0:
            print('Фулл Хаус')
        else:
            print('Сет')
    elif len(para1)!=0:
        if len(para2)!=0:
            print('Две пары')
        else:
            print('Пара')
    else:
        print('Старшая карта')
    
